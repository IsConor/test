继承中的对象模型

1.父类中的私有属性，子类是继承下去了，只不过由编译器隐藏了，访问不到
2.可以打开开发人员命令工具跳转盘符C：
3.跳转文件路径  cd ...
4.cl/d1 reportSingleClassLayout 类名 文件名

继承中的构造和析构

1.先调用父类构造，再调用其他成员构造，再调用自身构造，析构的顺序与构造相反
2.利用初始化列表语法，显示调用父类中的其他构造函数
3.父类中 构造、析构、拷贝构造、operator= 是不会被子类继承下去的

-----------------------------------------------------------------------------------------------------------------------------

#include <iostream>
using namespace std;

class Base1 {
public:
	Base1() {
		cout << "Base1的构造函数调用" << endl;
	}

	~Base1() {
		cout << "Base1的析构函数调用" << endl;
	}
};

class Son1 :public Base1 {
public:
	Son1() {
		cout << "Son1的构造函数调用" << endl;
	}

	~Son1() {
		cout << "Son1的析构函数调用" << endl;
	}
};

void test01() {
	Son1 s;	//先调用父类构造，再调用子类的构造，析构相反
}

class Base2 {
public:
	Base2(int val) {
		this->m_A = val;
		cout << "Base2的构造函数调用" << endl;
	}

	int m_A;
};

class Son2 :public Base2 {
public:
	Son2(int val):Base2(val) {	//利用初始化列表语法  显示调用父类中的其他构造函数
		cout << "Son2的构造函数的调用" << endl;
	}
};

void test02() {
	Son2 s(100);
	cout << s.m_A << endl;	//100
}

int main()
{
	//test01();
	test02();



	return 0;
}