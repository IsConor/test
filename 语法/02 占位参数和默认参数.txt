函数的默认参数以及占位参数

1.可以给函数的形参添加默认值
	1.1 语法  形参  类型   变量  =   默认值
	1.2  int func(int a = 10, int b = 10, int c = 10)
	1.3 注意事项  如果有一个位置有了默认参数，那么从这个位置起，右边都必须有默认值
	1.4 函数的声明和实现只能有一个提供默认参数，不可以同时加默认参数

2.占位参数
	2.1 只写一个类型进行占位，调用的时候必须要传入占位值
	2.2 占位参数的用途？  目前没用  占位参数可以有默认参数
	2.3 void func2(int a, int)


#include <iostream>
using namespace std;

//默认参数的语法  形参  类型   变量  =   默认值
//注意事项  如果有一个位置有了默认参数，那么从这个位置起，右边都必须有默认值
int func(int a = 10, int b = 10, int c = 10)
{
	return a + b + c;
}

void test01()
{
	cout << func(20) << endl;	//30  a->20  b->默认10
}

//函数的声明和实现只能有一个提供默认参数，不可以同时加默认参数
void myfunc(int a, int b); 
void myfunc(int a = 10, int b = 10) {}

//占位参数  只写一个类型进行占位，调用的时候必须要传入占位值
//占位参数的用途？  目前没用  占位参数可以有默认参数
void func2(int a, int)
{

}

void test02()
{
	func2(10,1);
}

int main()
{
	test01();

	return 0;
}