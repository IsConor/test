数组类和运算符重载

1.设计数组类

1.1属性
	1.1.1   int m_Capacity  //数组容量
	1.1.2   int m_Size;     //数组大小
	1.1.3     int pAddress  	//维护真实在堆区创建的数组指针
1.2行为
	1.2.1 	默认构造
	1.2.2	有参构造
	1.2.3	拷贝构造
	1.2.4	析构
	1.2.5  	根据位置  设置数据
	1.2.6	根据位置  获取数据
	1.2.7	尾插
	1.2.8	获取数组容量
	1.2.9	获取数组大小

2.加号运算符重载
	2.1 对于内置的数据类型，编译器知道如何进行运算
	2.2 对于自定义的数据类型，编译器不知道如何进行运算
	2.3 利用运算符重载，可以让符号有新的定义
	2.4 利用加号重载  实现p1+p2  Person 数据类型的相加操作
	2.5 利用成员函数 和 全局函数 都可以实现重载
	2.6 关键字 operator
	2.7 成员本质 p1.operator+(p2);
	2.8 全局本质 operator+(p1, p2);
	2.9 简化  p1 + p2;
	2.10 运算符重载 也可以发生函数重载

3.左移运算符重载
	3.1 不要滥用运算符重载，除非有需求
	3.2 不能对内置的数据类型进行重载
	3.3 对于自定义的数据类型不可以直接用 cout << 输出
	3.4 需要重载左移运算符
	3.5 如果利用成员 函数重载，无法实现让cout在左侧，因此不用成员函数重载
	3.6 利用全局函数，实现左移运算符重载
		ostream& operator<<(ostream& cout, Person& p){}
	3.7 如果想要访问类中私有的内容可以配合友元实现

4.递增运算符重载
	4.1 前置递增  MyInter& operator++(){}
	4.2 后置递增 MyInter operator++(int){} //int用于区分








